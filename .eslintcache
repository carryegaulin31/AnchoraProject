[{"/Users/ursalalindsey/Desktop/school/stackEducation/homework/AnchoraProject/src/mapStyles.js":"1","/Users/ursalalindsey/Desktop/school/stackEducation/homework/AnchoraProject/src/App.js":"2","/Users/ursalalindsey/Desktop/school/stackEducation/homework/AnchoraProject/src/index.js":"3","/Users/ursalalindsey/Desktop/school/stackEducation/homework/AnchoraProject/src/reportWebVitals.js":"4","/Users/ursalalindsey/Desktop/school/stackEducation/homework/AnchoraProject/src/components/Map/Search.js":"5","/Users/ursalalindsey/Desktop/school/stackEducation/homework/AnchoraProject/src/components/Map/Locate.js":"6","/Users/ursalalindsey/Desktop/school/stackEducation/homework/AnchoraProject/src/components/Map/Map.js":"7","/Users/ursalalindsey/Desktop/school/stackEducation/homework/AnchoraProject/src/containers/MapContainer/MapContainer.js":"8"},{"size":915,"mtime":1612063896660,"results":"9","hashOfConfig":"10"},{"size":468,"mtime":1612052304165,"results":"11","hashOfConfig":"10"},{"size":509,"mtime":1612041259433,"results":"12","hashOfConfig":"10"},{"size":362,"mtime":1611171642898,"results":"13","hashOfConfig":"10"},{"size":1768,"mtime":1612081227509,"results":"14","hashOfConfig":"10"},{"size":637,"mtime":1612074686210,"results":"15","hashOfConfig":"10"},{"size":5026,"mtime":1612121045105,"results":"16","hashOfConfig":"10"},{"size":301,"mtime":1612049018388,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sun1ap",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ursalalindsey/Desktop/school/stackEducation/homework/AnchoraProject/src/mapStyles.js",[],"/Users/ursalalindsey/Desktop/school/stackEducation/homework/AnchoraProject/src/App.js",[],"/Users/ursalalindsey/Desktop/school/stackEducation/homework/AnchoraProject/src/index.js",[],["36","37"],"/Users/ursalalindsey/Desktop/school/stackEducation/homework/AnchoraProject/src/reportWebVitals.js",[],"/Users/ursalalindsey/Desktop/school/stackEducation/homework/AnchoraProject/src/components/Map/Search.js",[],"/Users/ursalalindsey/Desktop/school/stackEducation/homework/AnchoraProject/src/components/Map/Locate.js",[],"/Users/ursalalindsey/Desktop/school/stackEducation/homework/AnchoraProject/src/components/Map/Map.js",["38"],"import \"./Map.css\";\nimport React, { useState } from \"react\";\nimport  {Link}  from \"react-router-dom\";\nimport {\n    GoogleMap,\n    useLoadScript,\n    Marker,\n    InfoWindow,\n} from \"@react-google-maps/api\";\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from \"../../mapStyles\";\nimport Data from \"../../containers/MapContainer/trials.json\";\nimport Search from \"../../components/Map/Search\";\nimport Locate from \"../../components/Map/Locate\";\nimport Box from '@material-ui/core/Box';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital'\nimport HealingIcon from '@material-ui/icons/Healing';\n\n\n\nconsole.log(Data)\n\n//avoid re-renders\nconst libraries = [\"places\", \"geometry\"]\n// make the map cover the page\nconst mapContainerStyle = {\n    width: \"100vw\",\n    height: \"100vh\",\n};\nconst center = {\n    lat: 45.815010,\n    lng: 15.981919,\n};\n// snazzy maps ---- copy and paste into separate file map styles and export as default\nconst options = {\n    styles: mapStyles,\n    // remove default items that come with map \n    disableDefaultUI: true,\n    //add individual items that you want\n    zoomControl: true,\n    scrollwheel: false,\n    rotateControl: true\n\n\n}\n\n\n\n\n// load map\nexport default function App() {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY,\n        libraries,\n\n    });\n\n\n\n\n    const [selected, setSelected] = useState(null);\n\n    const mapRef = React.useRef();\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, [])\n\n    // this function zoom in when a search is entered\n    const panTo = React.useCallback(({ lat, lng }) => {\n        mapRef.current.panTo({ lat, lng });\n        mapRef.current.setZoom(13)\n    }, [])\n\n\n\n\n\n    // this loads page\n    if (loadError) return \"Error loading maps\";\n    if (!isLoaded) return \"Loading Map\"\n\n\n    return (\n        // Add Ancora label at top  --- h1 on map --- h2 above map\n        <div>\n\n\n            <Search panTo={panTo} />\n            <Locate panTo={panTo} />\n            <GoogleMap\n                // how zoomed in when map starts\n                mapContainerStyle={mapContainerStyle}\n                zoom={6} center={center}\n                options={options}\n                onLoad={onMapLoad}\n\n            >\n\n                {Data.map((trial, index) => (\n                    <Marker\n                        key={index}\n\n                        //this is the marker title information\n\n                        title={trial.locations[0].facility_name}\n\n                        // this is setting the markers on the map\n                        position={{\n                            lat: Number(trial.locations[0].lat),\n                            lng: Number(trial.locations[0].lng)\n\n                        }}\n\n                        //change the icon\n                        icon={{\n                            url: \"marker.png\",\n                            /* ADD THIS TO CHANGE SIZE OF CUSTOM MARKER */\n                            // scaledSize: new window.google.maps.Size(30, 30)\n                        }}\n                        // this adds click to marker\n                        onClick={() => {\n                            setSelected(trial);\n                        }}\n                    />\n\n                ))}\n\n                {selected && (\n                    <InfoWindow className=\"infoDiv\"\n                        position={{\n                            lat: Number(selected.locations[0].lat),\n                            lng: Number(selected.locations[0].lng)\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n\n\n                    >\n                        <Box component=\"span\" color=\"text.primary\" m={1} className=\"infoBox\">\n                           \n                            <div className=\"infoBox\" >\n                                <div className=\"topBanner\"><p>ID:{selected.trial_id}</p></div>\n                                <h2>Trial Name</h2>\n                                <p>{selected.trial_name}</p>\n                                <h3>Trial Description</h3>\n                                <p>{selected.trial_description\n                                ?   selected.trial_description\n                                :   \"No Description For This Trial\"\n                                    }</p>\n                                <h4>Trial Summary</h4>\n                                <p>{selected.trial_summary}</p>\n                                <LocalHospitalIcon />\n                                <a href={`http://www.google.com/search?q=${selected.trial_name}`} >Learn More</a>\n                                <HealingIcon />\n                              \n                             \n                                \n                            </div>\n                                    \n                        </Box>\n                    </InfoWindow>)}\n\n            </GoogleMap>\n        </div>\n    )\n};\n\n\n","/Users/ursalalindsey/Desktop/school/stackEducation/homework/AnchoraProject/src/containers/MapContainer/MapContainer.js",["39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":3,"column":10,"nodeType":"47","messageId":"48","endLine":3,"endColumn":14},{"ruleId":"45","severity":1,"message":"49","line":3,"column":17,"nodeType":"47","messageId":"48","endLine":3,"endColumn":25},{"ruleId":"45","severity":1,"message":"50","line":3,"column":27,"nodeType":"47","messageId":"48","endLine":3,"endColumn":36},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]